"""Add product_groups and group_description

Revision ID: 34c46b2b86cc
Revises: c8a3b0e1d89b
Create Date: 2025-08-25 05:45:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '34c46b2b86cc'
down_revision: Union[str, None] = 'c8a3b0e1d89b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_groups',
    sa.Column('CODGRUPO', sa.String(), nullable=False),
    sa.Column('DESCRICAO', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('CODGRUPO')
    )
    op.create_index(op.f('ix_product_groups_CODGRUPO'), 'product_groups', ['CODGRUPO'], unique=False)
    op.add_column('products', sa.Column('group_description', sa.String(), nullable=True))
    op.create_index(op.f('ix_products_CODGRUPO'), 'products', ['CODGRUPO'], unique=False)
    # ### end Alembic commands ###

    # Recria o gatilho para incluir a nova coluna 'group_description' no search_vector
    op.execute("""
        DROP TRIGGER IF EXISTS tsvectorupdate ON products;
    """)
    op.execute("""
        CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE
        ON products FOR EACH ROW EXECUTE PROCEDURE
        tsvector_update_trigger(search_vector, 'pg_catalog.portuguese', "NOMEFANTASIA", group_description);
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_products_CODGRUPO'), table_name='products')
    op.drop_column('products', 'group_description')
    op.drop_index(op.f('ix_product_groups_CODGRUPO'), table_name='product_groups')
    op.drop_table('product_groups')
    # ### end Alembic commands ###

    # Reverte o gatilho para a vers√£o anterior (sem 'group_description')
    op.execute("""
        DROP TRIGGER IF EXISTS tsvectorupdate ON products;
    """)
    op.execute("""
        CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE
        ON products FOR EACH ROW EXECUTE PROCEDURE
        tsvector_update_trigger(search_vector, 'pg_catalog.portuguese', "NOMEFANTASIA");
    """)
